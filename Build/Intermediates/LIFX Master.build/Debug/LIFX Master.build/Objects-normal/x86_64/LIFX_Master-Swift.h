// Generated by Apple Swift version 2.1.1 (swiftlang-700.1.101.15 clang-700.1.81)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if defined(__has_include) && __has_include(<uchar.h>)
# include <uchar.h>
#elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
#endif

typedef struct _NSZone NSZone;

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted) 
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
#endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import AppKit;
@import Foundation;
#endif

#import "/Users/dallasmcneil/Documents/Developer/Apps/LIFX Master/LIFX Master/LIFX-Master-Bridging-Header.h"

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class NSStatusItem;
@class NSMenu;
@class LFXLight;
@class NSMenuItem;
@class NSTimer;
@class NSSlider;
@class LFXHSBKColor;
@class NSNotification;
@class LFXLightCollection;

SWIFT_CLASS("_TtC11LIFX_Master11AppDelegate")
@interface AppDelegate : NSObject <NSMenuDelegate, NSApplicationDelegate, LFXLightCollectionObserver, LFXLightObserver>

/// Status item that represents the menu bar item
@property (nonatomic, readonly, strong) NSStatusItem * __nonnull statusItem;

/// Menu of the status itme
@property (nonatomic, readonly, strong) NSMenu * __nonnull menu;

/// Light submenu, displays all light information
@property (nonatomic, strong) NSMenu * __nonnull lightMenu;

/// Effects submenu, displays all effects
@property (nonatomic, readonly, strong) NSMenu * __nonnull effectMenu;

/// Colour submenu, displays HSB colour sliders
@property (nonatomic, readonly, strong) NSMenu * __nonnull colourMenu;

/// All lights on the local network
@property (nonatomic, copy) NSArray<LFXLight *> * __nonnull lights;

/// Represents the labels of light menu items with a tick
@property (nonatomic, copy) NSDictionary<NSString *, NSNumber *> * __nonnull selectedLights;

/// All lights that are approved to be used by the user
@property (nonatomic, copy) NSArray<LFXLight *> * __nonnull approvedLights;

/// The last highlights menu item
@property (nonatomic, strong) NSMenuItem * __nullable selectedItem;

/// The on/off state of all lights
@property (nonatomic) BOOL toggleState;

/// The corresponding name of the effect displayed to the user
@property (nonatomic, copy) NSArray<NSString *> * __nonnull effectNames;

/// The corresponding update time of each effect
@property (nonatomic, copy) NSArray<NSNumber *> * __nonnull updateTimings;

/// A timer that manages the update of light effects
@property (nonatomic, strong) NSTimer * __nonnull timer;

/// The current effect option being used
@property (nonatomic) NSInteger effectOption;

/// The current effects time
@property (nonatomic) NSInteger effectCount;

/// Hue slider in colour menu
@property (nonatomic, readonly, strong) NSSlider * __nonnull sliderH;

/// Saturation slider in colour menu
@property (nonatomic, readonly, strong) NSSlider * __nonnull sliderS;

/// Brightness slider in colour menu
@property (nonatomic, readonly, strong) NSSlider * __nonnull sliderB;

/// The colour of the lights determined by the HSB sliders
@property (nonatomic, readonly, strong) LFXHSBKColor * __null_unspecified lightColour;
- (void)applicationDidFinishLaunching:(NSNotification * __nonnull)aNotification;

/// Called if light is discovered on network
- (void)lightCollection:(LFXLightCollection * __null_unspecified)lightCollection didAddLight:(LFXLight * __null_unspecified)light;

/// Called if light is removed from network
- (void)lightCollection:(LFXLightCollection * __null_unspecified)lightCollection didRemoveLight:(LFXLight * __null_unspecified)light;

/// Updates which lights are selected in the lights menu
- (void)updateSelectedLights;

/// Updates menu lighting options as new lights are discovered on the network
- (void)updateMenuLightOptions;

/// Called when a light is selected, approved or diapproved for use
- (void)lightPicked;

/// Delegate method called when item is highlited, updates selectedItem to last highlighted item
- (void)menu:(NSMenu * __nonnull)menu willHighlightItem:(NSMenuItem * __nullable)item;

/// Terminated application
- (void)quit;

/// Sets all approvedLights to colour over duration
- (void)setAllLights:(LFXHSBKColor * __nonnull)color duration:(NSTimeInterval)duration;

/// Sets the current effect based on last selected menu item
- (void)setEffect;

/// Toggles lights on or off depending on toggle state
- (void)toggleLights;

/// Sets timer for current effect option to update after a period of time
- (void)setupTimingForOption:(NSInteger)option;

/// Updates current lighting effect
- (void)updateLightsEffect;

/// Updates the colour of all approvedLights based on HSB slider values
- (void)updateLightColour:(NSSlider * __nonnull)sender;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#pragma clang diagnostic pop
